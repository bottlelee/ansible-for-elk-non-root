---
nginx_sites:
  - name: elasticsearch
    listen_port: 19200
    location: /
    upstreams: "{{ groups['elasticsearch'] }}"
    upstream_port: 9200
    upstream_method: least_conn
    proxy_ssl_verify: "off"
    proxy_protocol: https

  - name: kibana
    listen_port: 443
    location: /
    upstreams: "{{ groups['kibana'] }}"
    upstream_port: 5601
    upstream_method: least_conn
    proxy_ssl_verify: "off"
    proxy_protocol: http # HTTP only, no HTTPS on the kibana side

  - name: fleet-server
    listen_port: 18220
    location: /
    upstreams: "{{ groups['fleet_server'] }}"
    upstream_port: 8220
    upstream_method: least_conn
    proxy_ssl_verify: "off"
    proxy_protocol: https

nginx_streams:
  - name: elastic-agent
    listen_port: 15044
    server_name: logstash
    upstreams: "{{ groups['logstash'] }}"
    upstream_port: 5044
    upstream_method: least_conn
    proxy_ssl_verify: "off"

  - name: logstash-input
    listen_port: 19800
    server_name: logstash
    upstreams: "{{ groups['logstash'] }}"
    upstream_port: 9800
    upstream_method: least_conn
    proxy_ssl_verify: "off"

nginx_compile_args:
  - --prefix={{ elk_install_dir }}/nginx
  - --with-http_ssl_module
  - --with-http_v2_module
  - --with-http_v3_module
  - --with-http_stub_status_module
  - --with-http_gzip_static_module
  - --with-stream
  - --with-stream_ssl_module
  - --with-pcre
  - --with-poll_module
  - --http-log-path={{ elk_logs_dir }}/nginx/access.log

nginx_compile_args_hash: "{{ nginx_compile_args | sort | hash('md5') }}"

nginx_compile_tools:
  - gcc
  - pcre-devel
  - zlib-devel
  - openssl-devel

# Gateway addresses shortcut
nginx_kibana_vrrp_address: "{{ keepalived_vrrp_instances | selectattr('name', 'eq', 'kibana') | map(attribute='virtual_ipaddress') | first }}"
nginx_logstash_vrrp_address: "{{ keepalived_vrrp_instances | selectattr('name', 'eq', 'logstash') | map(attribute='virtual_ipaddress') | first }}"
nginx_elasticsearch_vrrp_address: "{{ keepalived_vrrp_instances | selectattr('name', 'eq', 'elasticsearch') | map(attribute='virtual_ipaddress') | first }}"

# Nginx certificates local path, if file not exists, self-sign certificates will be generated
# You can overwrite the auto-gen certificates by providing your own certificates
nginx_certificates:
  key: "{{ inventory_dir }}/credentials/nginx/{{ elk_domain }}.key"
  cert: "{{ inventory_dir }}/credentials/nginx/{{ elk_domain }}.crt"
  ca: "{{ inventory_dir }}/credentials/nginx/{{ elk_domain }}.ca"