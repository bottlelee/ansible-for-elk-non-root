---
- name: Update and create offline EPR container image
  hosts: localhost
  become: false
  gather_facts: false
  vars:
    epr_default_version: 8.13.4
    epr_image: "docker.elastic.co/package-registry/distribution:{{ epr_version | default(epr_default_version) }}"
    epr_local_dest: "{{ playbook_dir }}/files/downloads/elastic_package_registry_container_{{ epr_version | default(epr_default_version) }}.tar"
  vars_prompt:
    - name: warning
      prompt: "WARNING: This playook can only run on a docker/podman host, not on the target host or in a container"
      default: Understood
      private: false
    - name: cmd_bin
      prompt: "Choose a command: docker or podman"
      default: docker
      private: false
    - name: epr_version
      prompt: "Choose a version: {{ epr_default_version }} or other"
      private: false
      default: "{{ epr_default_version }}"
    - name: prune_images
      prompt: Prune dangling images after pull(yes/no)?
      default: true
      private: false
    - name: force_export
      prompt: Force export image(yes/no)?
      default: false
      private: false

  tasks:
    - name: Tips
      ansible.builtin.debug:
        msg: |
          We will use {{ cmd_bin }}
            to pull {{ epr_image }}
            and export it to {{ epr_local_dest }}
            and compress it in xz format"
          So, please wait...

    - name: Pulling image {{ epr_image }}
      community.docker.docker_image:
        name: "{{ epr_image }}"
        source: pull
        force_source: true
      when: cmd_bin == "docker"
      notify: Export image
      register: docker_result

    - name: Pulling image {{ epr_image }}
      containers.podman.podman_image:
        name: "{{ epr_image }}"
        force: true
      when: cmd_bin == "podman"
      notify: Export image
      register: podman_result

    - name: Compose up
      ansible.builtin.command:
        argv:
          - "{{ cmd_bin }}"
          - "compose"
          - "-f"
          - "es_registry_docker_compose.yml"
          - "up"
          - "-d"
      args:
        chdir: "{{ playbook_dir }}/files/elastic_package_registry"
      changed_when: false

    - name: Prune dangling images
      ansible.builtin.command:
        argv:
          - "{{ cmd_bin }}"
          - "image"
          - "prune"
          - "-f"
      changed_when: false
      when: prune_images

    - name: Force export image
      ansible.builtin.command:
        argv:
          - "{{ cmd_bin }}"
          - "image"
          - "ls"
      changed_when: force_export is true
      when: force_export
      notify: Export image

  handlers:
    - name: Exporting image {{ epr_image }}
      community.docker.docker_image_export:
        name: "{{ epr_image }}"
        path: "{{ epr_local_dest }}"
      when: cmd_bin == "docker"
      listen: Export image
      notify: Compress image

    - name: Exporting image {{ epr_image }}
      containers.podman.podman_save:
        name: "{{ epr_image }}"
        dest: "{{ epr_local_dest }}"
      when: cmd_bin == "podman"
      listen: Export image
      notify: Compress image

    - name: Compress image to xz format
      ansible.builtin.command: xz -z -e -f "{{ epr_local_dest }}"
      changed_when: false
      args:
        chdir: "{{ playbook_dir }}/files/downloads"
      register: xz_result
      listen: Compress image
