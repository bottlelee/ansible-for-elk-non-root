#SPDX-License-Identifier: MIT-0
---
# tasks file for setup_systemd_service
- name: Config hosts
  ansible.builtin.import_tasks:
    file: hosts.yml

- name: Set timezone
  ansible.builtin.timezone:
    name: "{{ elk_timezone | default('Asia/Shanghai') }}"

- name: Install system wide packages
  ansible.builtin.package:
    name: "{{ pkg.packages }}"
    state: present
  loop: "{{ init_system_packages | unique }}"
  loop_control:
    loop_var: pkg
    label: "Installing {{ pkg.packages[0:3] | join(',') }} and more. Please wait..."
  when:
    - init_system_packages is defined
    - pkg.when

- name: Config systemd
  ansible.builtin.import_tasks:
    file: systemd.yml

- name: Config sysctl
  ansible.posix.sysctl:
    name: "{{ sysctl.key }}"
    value: "{{ sysctl.value }}"
    state: present
    ignoreerrors: true
    reload: true
  with_dict: "{{ init_system_sysctl | default([]) }}"
  loop_control:
    loop_var: sysctl
    label: "{{ sysctl.key }}={{ sysctl.value }}"

- name: Config ulimit
  pam_limits:
    domain: "{{ limit_domain }}"
    limit_type: "{{ limit_type }}"
    limit_item: "{{ limit_item }}"
    value: "{{ limit_value }}"
    use_max: true
    dest: /etc/security/limits.d/99-elk.conf
  loop: "{{ init_system_ulimit | default([]) }}"
  loop_control:
    loop_var: ulimit
  vars:
    limit_domain: "{{ ulimit.split(' ')[0] }}"
    limit_type: "{{ ulimit.split(' ')[1] }}"
    limit_item: "{{ ulimit.split(' ')[2] }}"
    limit_value: "{{ ulimit.split(' ')[3] }}"
