#SPDX-License-Identifier: MIT-0
---
# tasks file for setup_systemd_service

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Set timezone
  ansible.builtin.timezone:
    name: "{{ elk_timezone | default('Asia/Shanghai') }}"

- name: Adjust Permissions with polkit
  ansible.builtin.template:
    src: systemd/polkit.rules.j2
    dest: /etc/polkit-1/rules.d/99-{{ elk_role }}.rules
    mode: "0644"
    backup: true
  notify: Restart polkit

- name: Create/update /etc/systemd/system/{{ elk_role + '.service' }}
  ansible.builtin.template:
    src: "{{ service_template }}"
    dest: /etc/systemd/system/{{ elk_role }}.service
    mode: "0644"
    owner: "{{ elk_user }}"
    group: "{{ elk_group }}"
  with_fileglob:
    - "{{ playbook_dir }}/templates/systemd/{{ elk_role }}.service.j2"
  loop_control:
    loop_var: service_template

- name: Reload systemd
  ansible.builtin.systemd:
    name: "{{ elk_role }}"
    daemon_reload: true
    enabled: true

- name: Config sysctl
  ansible.posix.sysctl:
    name: "{{ sysctl.key }}"
    value: "{{ sysctl.value }}"
    state: present
    ignoreerrors: true
    reload: true
  with_dict: "{{ init_system_sysctl | default([]) }}"
  loop_control:
    loop_var: sysctl
    label: "{{ sysctl.key }}={{ sysctl.value }}"

- name: Config ulimit
  pam_limits:
    domain: "{{ limit_domain }}"
    limit_type: "{{ limit_type }}"
    limit_item: "{{ limit_item }}"
    value: "{{ limit_value }}"
    use_max: true
    dest: /etc/security/limits.d/99-elk.conf
  loop: "{{ init_system_ulimit | default([]) }}"
  loop_control:
    loop_var: ulimit
  vars:
    limit_domain: "{{ ulimit.split(' ')[0] }}"
    limit_type: "{{ ulimit.split(' ')[1] }}"
    limit_item: "{{ ulimit.split(' ')[2] }}"
    limit_value: "{{ ulimit.split(' ')[3] }}"

- name: Config /etc/hosts
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: |-
      {% for host in (groups['all'] | sort) %}
      {{ hostvars[host]['ansible_host'] }} {{ hostvars[host]['inventory_hostname'] }} {{ hostvars[host]['inventory_hostname'] }}.{{ elk_domain }}
      {% endfor %}
    owner: "{{ elk_user }}"
    group: "{{ elk_group }}"
    backup: true
