---
- name: Bootstrapping Elasticsearch
  ansible.builtin.service:
    name: elasticsearch
    state: started

- name: Wait for bootstrap node to be ready
  ansible.builtin.wait_for:
    host: "{{ elasticsearch_config['http.host'] }}"
    port: "{{ elasticsearch_config['http.port'] }}"
    timeout: 300

- name: Create local paths
  ansible.builtin.file:
    path: "{{ path }}"
    state: directory
    mode: "0750"
  with_items:
    - "{{ inventory_dir }}/credentials/certs"
    - "{{ inventory_dir }}/credentials/passwords"
  loop_control:
    loop_var: path
  become: false
  delegate_to: localhost

- name: Update built-in users password
  ansible.builtin.include_tasks:
    file: update_built_in_users_password.yml
    apply:
      tags: reset_es_password
  with_items:
    - apm_system
    - beats_system
    - elastic
    - kibana_system
    - logstash_system
    - remote_monitoring_user
  loop_control:
    loop_var: built_in_user
  tags: reset_es_password

- name: Fetch certificate files from bootstrap node
  ansible.builtin.fetch:
    src: "{{ elk_install_dir }}/elasticsearch/config/certs/{{ item }}"
    dest: "{{ inventory_dir }}/credentials/certs/"
    flat: true
  with_items:
    - http_ca.crt
    - http.p12
    - transport.p12

- name: Remove any existing enrollment token files
  ansible.builtin.file:
    path: "{{ file_path }}"
    state: absent
  with_items:
    - "{{ inventory_dir }}/files/enrollment-token-node"
    - "{{ inventory_dir }}/files/enrollment-token-kibana"
  loop_control:
    loop_var: file_path
  become: false
  delegate_to: localhost
